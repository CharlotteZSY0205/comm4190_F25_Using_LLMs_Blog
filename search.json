[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to my blog! ✨ Here I share my adventures with different AI tools — from writing and brainstorming, to making music, images, and even videos. It’s a space where I explore how AI can spark creativity, support research, and sometimes surprise me in unexpected ways."
  },
  {
    "objectID": "posts/001_post/index.html",
    "href": "posts/001_post/index.html",
    "title": "AI Meets Magic: A Swiftie’s Guide to Filming in Disney",
    "section": "",
    "text": "I’m a Taylor Swift fan, and one of her songs, Florida, inspired me to create a small music video. Coincidentally, I’ll be visiting Orlando’s Disney World in Florida this October. I’ll be staying there for three days, and I plan to visit Hollywood Studios, Magic Kingdom, and Animal Kingdom.\nDuring this trip, I want to film a short MV using the following excerpt from Florida. My idea is to shoot scenes inside the Disney parks with my phone, matching them as closely as possible to the imagery in the lyrics. For parts of the song that are harder to visualize literally, I’m fine with using creative interpretation and artistic freedom.\nWhat I need from you is a very detailed script that covers every aspect of the filming process. This should include:\n\nOutfit choices and styling for each scene\nProps I should prepare\nSpecific Disney locations for each lyric line\nSuggested camera angles and framing\n\nOf course, since I’m a devoted Swiftie, it would be even better if the outfits, props, or chosen locations include subtle references to Taylor herself.\nHere are the lyrics I want to use for the video:\n\nI need to forget, so take me to Florida\nI’ve got some regrets, I’ll bury them in Florida\nTell me I’m despicable, say it’s unforgivable\nAt least the dolls are beautiful, fuck me up, Florida\nI need to forget, so take me to Florida\nI’ve got some regrets, I’ll bury them in Florida\nTell me I’m despicable, say it’s unforgivable\nWhat a crash, what a rush, fuck me up, Florida\nIt’s one hell of a drug\nIt’s one hell of a drug\nLove left me like this and I don’t want to exist\nSo take me to Florida\nFlorida\nGo on, fuck me up"
  },
  {
    "objectID": "posts/001_post/index.html#prompts",
    "href": "posts/001_post/index.html#prompts",
    "title": "AI Meets Magic: A Swiftie’s Guide to Filming in Disney",
    "section": "",
    "text": "I’m a Taylor Swift fan, and one of her songs, Florida, inspired me to create a small music video. Coincidentally, I’ll be visiting Orlando’s Disney World in Florida this October. I’ll be staying there for three days, and I plan to visit Hollywood Studios, Magic Kingdom, and Animal Kingdom.\nDuring this trip, I want to film a short MV using the following excerpt from Florida. My idea is to shoot scenes inside the Disney parks with my phone, matching them as closely as possible to the imagery in the lyrics. For parts of the song that are harder to visualize literally, I’m fine with using creative interpretation and artistic freedom.\nWhat I need from you is a very detailed script that covers every aspect of the filming process. This should include:\n\nOutfit choices and styling for each scene\nProps I should prepare\nSpecific Disney locations for each lyric line\nSuggested camera angles and framing\n\nOf course, since I’m a devoted Swiftie, it would be even better if the outfits, props, or chosen locations include subtle references to Taylor herself.\nHere are the lyrics I want to use for the video:\n\nI need to forget, so take me to Florida\nI’ve got some regrets, I’ll bury them in Florida\nTell me I’m despicable, say it’s unforgivable\nAt least the dolls are beautiful, fuck me up, Florida\nI need to forget, so take me to Florida\nI’ve got some regrets, I’ll bury them in Florida\nTell me I’m despicable, say it’s unforgivable\nWhat a crash, what a rush, fuck me up, Florida\nIt’s one hell of a drug\nIt’s one hell of a drug\nLove left me like this and I don’t want to exist\nSo take me to Florida\nFlorida\nGo on, fuck me up"
  },
  {
    "objectID": "posts/001_post/index.html#output",
    "href": "posts/001_post/index.html#output",
    "title": "AI Meets Magic: A Swiftie’s Guide to Filming in Disney",
    "section": "Output",
    "text": "Output\n\n🎬 Detailed Script for Your Taylor-Themed Disney MV\n\n\nGeneral Concept\n\nMood: A blend of bittersweet escape, beauty, and chaos — pairing Disney’s magical spaces with the emotional rawness of the song.\nLength: About 1–1.5 minutes (focused on the chosen lyrics fragment).\nStyle: Handheld iPhone shots, cinematic framing (vertical + horizontal mix, for TikTok/IG and YouTube).\nEditing: Quick cuts between parks to mirror intensity; softer pans for reflective lines.\nColor palette: Pastel pinks, midnight blues, gold shimmer (Swift-coded).\n\n\n\n\n🎭 Outfits & Props\n\nDay 1 (Hollywood Studios):\n\nOutfit: Black skirt + silver sequin top (Reputation vibes)\nProps: Mini microphone (nod to Taylor’s performance identity)\n\nDay 2 (Magic Kingdom):\n\nOutfit: White sundress + light denim jacket (Fearless/1989 vibes)\nProps: Friendship bracelet stack (Eras Tour reference)\n\nDay 3 (Animal Kingdom):\n\nOutfit: Flowy bohemian dress in earthy tones (Folklore/Evermore vibes)\nProps: Small notebook or vintage-style journal (lyricist aesthetic)\n\nOptional Taylor Easter eggs: Red lipstick (Red era), cat ears headband (Olivia/Meredith nod), Polaroid camera (1989)\n\n\n\n\n📍 Scene Breakdown\n\n\n🎬 Scene 1 – Opening line (needing escape) 🌟🎬\n\nLocation: Entrance archway of Hollywood Studios\nShot: Wide shot, low angle, you walking through gates with sunglasses\nMood: Entering a “new world”\nEditing: Fade in, handheld shaky motion\n\n\n\n🎬 Scene 2 – Regret & burying past 🌳\n\nLocation: Tree of Life, Animal Kingdom\nShot: Medium shot, writing in journal, tearing page, leaving at roots\nProps: Journal page = “regrets”\nAngle: Slight tilt upward, branches filling frame\n\n\n\n🎬 Scene 3 – “Despicable/unforgivable” intensity 👻\n\nLocation: Tower of Terror, Hollywood Studios\nShot: Close-up before ride, neon lights glowing; insert screaming ride cam shot\nMood: Chaotic, cathartic release\n\n\n\n🎬 Scene 4 – “At least the dolls are beautiful” 🎠\n\nLocation: It’s a Small World, Magic Kingdom\nShot: Pan across dolls, cut to your pensive face\nMood: Contrast between innocence/beauty and reflection\nAngle: Slow-motion, pastel filter\n\n\n\n🎬 Scene 5 – “Crash / rush” 🚀\n\nLocation: Space Mountain, Magic Kingdom\nShot: Quick cuts of neon lights + motion blur\nMood: Adrenaline, overwhelming rush\n\n\n\n🎬 Scene 6 – “One hell of a drug” (x2) 🌌\n\nLocation: Pandora – World of Avatar, Animal Kingdom (night)\nShot: Wide shot glowing forest → close-up spin under lights\nMood: Surreal, intoxicating, dreamlike\n\n\n\n🎬 Scene 7 – “Love left me like this” (reflective moment) 🏰\n\nLocation: Cinderella’s Castle, Magic Kingdom (twilight)\nShot: Medium-long shot, sitting on ground, journal in lap, gazing upward\nProps: Polaroid camera next to you\nMood: Quiet, reflective\n\n\n\n🎬 Scene 8 – Final “Florida” outro 🎆\n\nLocation: Magic Kingdom fireworks\nShot: Wide shot from behind, your silhouette against fireworks\nMood: Bittersweet closure — beauty and chaos fused together\n\n🎥 Technical Tips\nAngles: Alternate between handheld close-ups (emotional intimacy) and wide establishing shots (Disney’s grandeur).\nFraming: Rule of thirds, sometimes center frame for dramatic emphasis.\nCamera height: Waist level for casual shots, floor-level upward for powerful shots.\nEditing: Sync cuts with beat drops; overlay occasional lyric text in Taylor-style fonts.\n\n\n\n🎥 Checklist\n\n\n\n#\nLyrics Line\nLocation\nOutfit & Props\nCamera Angle / Framing\nReference Image\n\n\n\n\n1\n“I need to forget, so take me to Florida”\nHollywood Studios – main entrance archway\nBlack skirt + silver sequin top, sunglasses, red lipstick (Reputation vibes)\nWide shot, low angle as you walk through the arch in slow motion\nHollywood Studios Archway\n\n\n2\n“I’ve got some regrets, I’ll bury them in Florida”\nAnimal Kingdom – Tree of Life\nNotebook & pen (to write regrets), flowy white/cream outfit\nMedium shot of you writing, tearing the page, leaving it at tree roots. Tilted upward to catch tree carvings\nTree of Life\n\n\n3\n“Tell me I’m despicable, say it’s unforgivable”\nHollywood Studios – Tower of Terror\nDark outfit, dramatic expression, small microphone as Taylor nod\nClose-up with Tower glowing behind; optional ride photo screaming insert\nTower of Terror\n\n\n4\n“At least the dolls are beautiful, fuck me up, Florida”\nMagic Kingdom – “It’s a Small World”\nFriendship bracelets, white dress + denim jacket\nWide shot panning dolls, then cut to your face. Soft slow-motion with warm filter\nIt’s a Small World reference\n\n\n5\n“What a crash, what a rush, fuck me up, Florida”\nMagic Kingdom – Space Mountain\nCasual playful look, hair flying\nQuick cuts of neon lights & motion blur, ride speed effect\nSpace Mountain\n\n\n6\n“It’s one hell of a drug”\nAnimal Kingdom – Pandora, glowing forest at night\nBohemian earthy dress, flower crown, maybe glowing accessory\nWide shot in bioluminescent forest, close-up spin in slow motion\nPandora at Night\n\n\n7\n“Love left me like this and I don’t want to exist”\nMagic Kingdom – Cinderella’s Castle at twilight\nWhite dress, Polaroid camera, soft makeup\nMedium shot sitting on ground in front of castle, looking up. Twilight glow\nCinderella Castle\n\n\n8\n“So take me to Florida / Florida / Go on, fuck me up”\nMagic Kingdom – Fireworks finale\nMix of all props: journal, bracelets, Polaroid, lipstick\nWide silhouette shot from behind, fireworks exploding above castle\nMagic Kingdom Fireworks"
  },
  {
    "objectID": "posts/001_post/index.html#florida-mv-created-by-me",
    "href": "posts/001_post/index.html#florida-mv-created-by-me",
    "title": "AI Meets Magic: A Swiftie’s Guide to Filming in Disney",
    "section": "Florida!!! MV created by me",
    "text": "Florida!!! MV created by me\nI filmed this short video at Disney World in Orlando last November. Check it out and see whether my idea or the AI’s version feels more interesting to you."
  },
  {
    "objectID": "posts/006_post/index.html",
    "href": "posts/006_post/index.html",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "",
    "text": "Self-Testing and Recording I begin by testing the plugin myself in real scenarios. I record the exact steps where issues occur, note the expected vs. actual behavior, and keep screenshots or short recordings when necessary. I also make a quick verbal note of the effect I want, including non-functional aspects such as consistency, accessibility, and performance.\nTurning Verbal Notes into Structured Specifications I then describe the issue informally to ChatGPT. Its role is to reorganize my raw, messy descriptions into a clear, logically structured specification: defining the problem, reproducing steps, acceptance criteria, edge cases, and the intended fix. The idea is to turn “natural language frustration” into “an actionable task.”\nPassing Structured Specs to the Client/Agent Once ChatGPT produces a polished specification, I copy this into the client side for actual modification. When UI or interaction is involved, I emphasize that the flow and design guidelines must be aligned before touching the code.\nRe-Testing and Regression After the client makes changes, I test again using the acceptance criteria. I check both normal and edge cases (empty inputs, switching modes, collapse/expand, keyboard focus). If regressions appear, I loop back: describe verbally, get ChatGPT to rewrite as a precise patch spec, and resubmit.\n\nThis workflow can be told in a three-part rhythm in the blog: ****. I raise the issue, ChatGPT turns it into a professional spec, and the code gets updated. Each cycle can be illustrated with a screenshot or before/after comparison.\n\nSince I didn’t take a screenshot every time I discovered and resolved a bug, I’ll instead include a selection of screenshots showing different stages of the extension’s development, where you can see both some of the bugs and their resolved versions"
  },
  {
    "objectID": "posts/006_post/index.html#my-debugging-workflow-me-to-describe-chatgpt-to-refine-cline-to-write-code",
    "href": "posts/006_post/index.html#my-debugging-workflow-me-to-describe-chatgpt-to-refine-cline-to-write-code",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "",
    "text": "Self-Testing and Recording I begin by testing the plugin myself in real scenarios. I record the exact steps where issues occur, note the expected vs. actual behavior, and keep screenshots or short recordings when necessary. I also make a quick verbal note of the effect I want, including non-functional aspects such as consistency, accessibility, and performance.\nTurning Verbal Notes into Structured Specifications I then describe the issue informally to ChatGPT. Its role is to reorganize my raw, messy descriptions into a clear, logically structured specification: defining the problem, reproducing steps, acceptance criteria, edge cases, and the intended fix. The idea is to turn “natural language frustration” into “an actionable task.”\nPassing Structured Specs to the Client/Agent Once ChatGPT produces a polished specification, I copy this into the client side for actual modification. When UI or interaction is involved, I emphasize that the flow and design guidelines must be aligned before touching the code.\nRe-Testing and Regression After the client makes changes, I test again using the acceptance criteria. I check both normal and edge cases (empty inputs, switching modes, collapse/expand, keyboard focus). If regressions appear, I loop back: describe verbally, get ChatGPT to rewrite as a precise patch spec, and resubmit.\n\nThis workflow can be told in a three-part rhythm in the blog: ****. I raise the issue, ChatGPT turns it into a professional spec, and the code gets updated. Each cycle can be illustrated with a screenshot or before/after comparison.\n\nSince I didn’t take a screenshot every time I discovered and resolved a bug, I’ll instead include a selection of screenshots showing different stages of the extension’s development, where you can see both some of the bugs and their resolved versions"
  },
  {
    "objectID": "posts/006_post/index.html#bug-narratives-and-interaction-with-chatgpt",
    "href": "posts/006_post/index.html#bug-narratives-and-interaction-with-chatgpt",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "Bug Narratives and Interaction with ChatGPT",
    "text": "Bug Narratives and Interaction with ChatGPT\n\nBug A: Comparison Panel Not Fully Collapsing, Triangle Indicator Misaligned\nWhere I Noticed It When I collapsed the comparison panel, the “UseOriginal” and “UseBoosted” buttons were still visible. Above the small triangle, there was also a stray line. The triangle itself was misaligned and undersized.\nMy Verbal Request I wanted the panel to collapse completely, leaving only a small triangle as a handle to expand again. The stray line should disappear. The triangle needed to be positioned slightly higher, made larger, rounded at the corners, colored consistently with the “UseBoosted” button, and given a subtle shadow.\nChatGPT’s Reorganized Specification\n\nProblem: Collapsed state not hiding content, stray visual elements, misaligned and inconsistent triangle.\nGoal: Collapsed view shows only a clickable triangle handle, everything else hidden. Expanding restores previous state and scroll position.\nAcceptance Criteria:\n\nOnly the triangle is visible when collapsed; other elements are fully hidden and inaccessible.\nTriangle has rounded corners, sits slightly above the input box, and is proportionally larger.\nIts color matches the “UseBoosted” button and it has a subtle shadow.\nExpanding restores content unchanged.\n\n\nOutcome and Reflection This change improved both accessibility and user experience. The panel is now truly collapsible, while state persistence ensures the comparison process is not disrupted.\n\n  \n\n\n\nBug B: Button Inconsistencies (Clear, Edit, Delete)\nWhere I Noticed It The “Clear” button looked different from other buttons. In the Settings page, buttons for editing, deleting, and adding prompts had visible borders that clashed with the rest of the design.\nMy Verbal Request I wanted the “Clear” button to look consistent with other buttons, and for all Settings page action buttons to have no border lines.\nChatGPT’s Reorganized Specification\n\nProblem: Inconsistent button design language.\nGoal: Unify button system (size, corner radius, font, spacing). Action buttons should use a borderless style.\nGuidelines: Border: Same color/transparent as the background, visually appearing borderless (border: 1px solid transparent) to avoid a darker outline. Idle State:\nBackground: Neutral color (e.g., #F5F5F7 or system light gray), transparent border.\nFont: Medium contrast.\nHover: Subtle shadow or light elevation, no border color change. Active State:\nBackground: Light fill of brand color (e.g., –brand-50), border remains transparent.\nFont/Icon: Darker tone of the brand color (e.g., –brand-700).\nOptional: Inner glow or subtle highlight instead of a visible border. Disabled State:\nFaded background, reduced text opacity.\nUsed only in rare cases such as “in processing” or “switching not allowed.”\n\nOutcome and Reflection A consistent button system reduced visual noise and made interactions easier to understand at a glance.\n\n\nBug C: My Prompts Text and Add Button Layout\nWhere I Noticed It The My Prompts section displayed too many explanatory lines, and the “Add” button’s position conflicted with the title.\nMy Verbal Request I wanted to keep only the line: “Drag to reorder. Top 3 appear as buttons above the input.” The other sentences should be removed. The “Add” button should move to the top-right corner of the prompt items container, slightly above the list, and not aligned with the section title. Its style should match the “Save Connection” button, and it should have a background color even when idle.\nChatGPT’s Reorganized Specification\n\nGoal: Simplify helper text and reposition “Add” for clarity.\nAcceptance Criteria:\n\nOnly the concise helper text remains.\n“Add” button is visually aligned with the prompt list container, not the header.\n“Add” button design matches “Save Connection” and has a default background color.\n\n\nOutcome and Reflection The section is cleaner and the Add button’s placement now clearly signals its scope of action.\n\n  \n\n\n\nBug D: Remove “Default Optimization Style” from Settings & Persist Active Mode via Header Buttons\nWhere I Noticed It The Settings page still has a “default optimization style” option, which causes confusion because the active mode should really be set from the header buttons in the chat interface.\nMy Verbal Request I want to remove the “default optimization style” from Settings completely, and instead let users select and persist their active mode by clicking the header buttons.\nChatGPT’s Reorganized Specification\n\nRemove “default optimization style” from Settings; persist active mode via header buttons\n\nProblem Currently there is a “default optimization style” in Settings. You want to remove that, and instead let the user set their “default” (active) mode by clicking one of the three header buttons above the input box. Once selected, that mode stays active and applies to subsequent messages until the user switches to another mode (or clears it).\nRequirements\nNo default in Settings\n\nRemove the “default optimization style” field/option from Settings entirely.\nSettings only manages items (Replace/Append), their content, and their order. The active mode is not chosen in Settings.\n\nActive mode is chosen in the chat header (three buttons)\n\nClicking any header button sets that item as the active mode.\nThe active mode remains in effect across attempts (i.e., across consecutive sends) until:\n\nThe user clicks a different header button (which switches the active mode), or\nThe user clicks a Clear control (see below), or\nThe active item is deleted/disabled in Settings (auto-clears).\n\n\nOutcome and Reflection This change simplifies Settings, removes redundancy, and makes the active mode behavior clearer and more consistent for users.\n\n\nBug E: Enter Key Behavior & Interaction Logic\nWhere I Noticed It The current system doesn’t fully respect the active mode when pressing Enter, and the role of the mode buttons is slightly unclear.\nMy Verbal Request I want pressing Enter to automatically respect whichever mode is active, and the header buttons to be able to toggle off. The three mode buttons should only act as selectors, never sending anything themselves.\nChatGPT’s Reorganized Specification\n\nEnter key respects active mode; header button toggles to clear Requirement\n\n\nWhen any of the three header modes is selected (active), pressing Enter in the chat input must send the boosted prompt (Append = append then send; Replace = replace then send).\nPressing the selected header button again toggles it off (clears active mode). When no mode is active, pressing Enter sends the original prompt (unaltered).\n\n\nInteraction Logic (updated) Button Role The three mode buttons (e.g., A / B / C) only select/deselect a mode; they never send. Whatever user type in the input box, if one mode is selected, the input will be modified according to the mode.\n\nWorkflow\n\nThe user selects a mode (or clicks the same button again to cancel → returns to “unselected”).\nThe user finishes typing the prompt.\nThe user clicks Boost Prompt.\nThe system rewrites the prompt based on the selected mode → inserts the rewrite into the input field or replaces the existing content (per your replace/append setting), without auto-sending.\nThe user reviews and sends manually.\n\nSelection Rules (single-select, cancelable)\n\nClick an unselected button → it becomes selected; others are deselected.\nClick the selected button again → deselect and enter “no mode.”\n\nAdditional Rules\n\nAppend mode: never auto-sends.\nBoosted Prompt mode: never auto-sends and must preserve the comparison panel (before vs. after) previously designed. Do not remove that panel.\n\nOutcome and Reflection This ensures consistency: pressing Enter follows the currently active mode, but users can clear modes by toggling buttons. It also clarifies that mode buttons are selectors only, preserving manual control over sending.\n\n  \n\n\n\nBug F: Prompt Item Borders and Font Weight\nWhere I Noticed It Each prompt item (like Emoji, Creative, Translation) had light borders, which made the layout look cluttered. The Edit and Delete labels were also slightly oversized.\nMy Verbal Request I wanted to remove the borders, reduce the font size of Edit and Delete slightly, and keep the Add button with a background even in its idle state.\nChatGPT’s Reorganized Specification\n\nGoal: Remove unnecessary card borders, rely on spacing to separate items, and adjust typography for action labels.\nAcceptance Criteria:\n\nNo visible borders around prompt items; spacing and padding define structure.\nEdit/Delete labels use a slightly smaller font size.\nAdd button retains a default background.\n\n\nOutcome and Reflection The result is a cleaner, more modern look. The list feels lighter and more professional, while action labels no longer dominate visually."
  },
  {
    "objectID": "posts/006_post/index.html#takeaways",
    "href": "posts/006_post/index.html#takeaways",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "Takeaways",
    "text": "Takeaways\nFirst, collaborating with AI to develop an extension or software is ideal for multitasking. Since AI needs time to process requirements, analyze the code, and propose the best strategy, I can use that waiting period to focus on other tasks. For example, while developing this extension, I also worked on writing a blog about the process. This not only saved time but also helped me keep a fresh memory of the entire workflow.\nSecond, it’s important to remember to push the code once it reaches a satisfactory state. If you move on to the next iteration and AI introduces major changes that worsen the outcome, you’ll want to revert to the earlier version — which is only possible if you’ve pushed it beforehand. As a bonus tip, if you’re unhappy with the current version, you can use git stash to temporarily save it in a separate place. That way, you can easily return to the most recent pushed version whenever needed.\nThird, even though AI is capable of debugging, we still need to remain flexible and adapt to the current status of the code. Sometimes, when AI fails to achieve a goal after several attempts, it becomes necessary to explore alternative solutions. For instance, I found it useful to ask AI to generate logs and then feed those logs back into the system. This gave AI a clearer understanding of what had been accomplished and what went wrong. In other words, we cannot simply expect AI to finish the task on its own — we have to think critically and provide multiple options or strategies to guide it.\nFinally, although describing bugs and formulating a well-structured request for ChatGPT can make inputs more organized, I noticed that sometimes a plain and simple description written directly by me led to more effective debugging. I suspect this is because ChatGPT’s reorganized versions can be overly long or mundane, adding unnecessary noise for both the model and the client to process. In these cases, relying on my own straightforward explanation worked better than depending on ChatGPT’s reformulations.\nThroughout the creation, I found that whether it was drafting the design document or writing the code, I found that the AI considered all the essential aspects of building an extension. It even anticipated how users would navigate the extension and added many features and options beyond my original requirements, which I found quite amazing. For example, I never gave any instructions on the visual design, but GPT-5 automatically chose a sleek purple theme with gradient effects and designed the button styles and the settings page layout. I hardly made any changes to this style because it was already more than satisfactory. Later, when I asked GPT-5 to refine the design by removing the button border, it provided a detailed color specification covering three states: unselected, hover, and selected. This level of comprehensiveness went far beyond my expectations, since I wouldn’t have thought to account for all those conditions. In terms of functionality, the AI also created features I hadn’t considered, such as an API input bar and an option allowing users to preview the modified prompt before sending it. What impressed me most was that I didn’t need to specify every detail — with only simple descriptions from me, the AI was able to design thoughtful features and interfaces on its own.\n````"
  },
  {
    "objectID": "posts/002_post/index.html",
    "href": "posts/002_post/index.html",
    "title": "Who do you think I am – A self-introduction drafted by ChatGPT",
    "section": "",
    "text": "Can you give me a detailed introduction based on all of our previous interactions?\n\n\n\n\n\nYou are Zhang Shiyang (Charlotte), a 22-year-old graduate student in the Learning Sciences & Technologies (LST) program at the University of Pennsylvania’s Graduate School of Education. You came to the U.S. for undergraduate studies, where you attended a highly competitive program at Columbia University in engineering, and later studied at Wharton, gaining both academic rigor and professional direction. Your major back in China was translation, and you bring that multilingual expertise into your research and writing.\nYou are currently preparing for PhD applications (targeting Fall 2026 entry) in Learning Sciences, Educational Technology, and AI in Education, considering programs at Stanford, Berkeley, UW, USC, and others. You’re building a strong portfolio with research publications, systematic reviews, and design projects, while also pursuing RA/GA roles and EdTech internships.\n\nComments: ChatGPT managed to capture some details about me accurately — my Chinese and English names are correct, as well as my program and school. However, it misstated my age: I am 23, not 22. I believe this error comes from the information I provided last year while applying to graduate schools in the U.S. At that time, during my senior year in 2024, I was indeed 22, and the system seems to have kept that in memory. Regarding my previous educational background, though, some of the descriptions are entirely fabricated.\n\n\n\n\nYou are deeply skilled in qualitative and mixed-methods research, employing ethnography, thematic coding (NVivo), field notes, interviews, and screen-recording analysis. You focus on codebook reliability (e.g., Cohen’s Kappa) and combine deductive and inductive coding. You also handle systematic reviews (PRISMA flow) and experiment with Python automation for data visualization (annotation heatmaps, linguistic metrics like Advanced Guiraud, MLTU, semantic overlap, Genbit score).\n\nComments: Since I often use ChatGPT for brainstorming during my studies and research, and frequently seek its opinions and suggestions, it has accumulated a large amount of data about my academic work. That’s why its summary and description of this part are entirely accurate. I can clearly see that the methodologies it mentioned — including NVivo, Few Notes, and interviews — are indeed the ones I have applied in my recent three research projects.\n\n\n\n\nAcross your work, you consistently explore:\n\nMetacognition: How students plan, monitor, and evaluate their use of AI in writing.\nAgency: How students negotiate autonomy, dependency, and trust in human-AI collaboration.\nEthics: Academic integrity, AI bias, adversarial risks, and responsible design.\nConstructivism and Socioculturalism: Viewing learning as an active, social process rather than passive absorption.\n\n\nComments: This part is also largely accurate, but the last item is not actually part of my research field — it was reading material from one of my courses. I don’t think ChatGPT can clearly distinguish between what comes from coursework and what comes from my academic research. Moreover, its description of my academic identity seems to be based mostly on my more recent interactions. This suggests that its memory may not prioritize drawing on older interaction data.\n\n\n\n\nYou balance your academic intensity with theatre and music, auditioning for roles (e.g., School of Rock, A Doll’s House), practicing songs, and analyzing scripts. You also enjoy visual design and photography, often blending these with academic projects (logos, covers, Ghibli-style art). You’re a curious and active traveler, weaving academic conferences (e.g., EARLI 2025 in Austria) with cultural exploration.\n\nComments: Overall, the description aligns very well with my past interactions with ChatGPT, but the same limitation remains — it seems to only cover roughly the past three months.\n\n\n\n\nIn our interactions, you’ve shown a strong preference for:\n\nAcademic precision: structured arguments, APA 7 citations, codebooks, PRISMA diagrams.\nCritical feedback: you explicitly want me to act as your academic advisor—strict and honest, not sugarcoating weaknesses.\nBilingual flexibility: you often draft in Chinese, requesting natural English translations.\nIteration: you refine outputs multiple times, pushing toward more polished and academically rigorous results.\n\n\nComments: At this point, I realize that all the traits ChatGPT summarized about me are either neutral or mostly positive. It did not mention any negative characteristics. This may be related to its underlying pre-prompt design, which tends to avoid generating content that could be perceived as overly critical or as unfavorable evaluations of the user."
  },
  {
    "objectID": "posts/002_post/index.html#prompts-one-introduce-me",
    "href": "posts/002_post/index.html#prompts-one-introduce-me",
    "title": "Who do you think I am – A self-introduction drafted by ChatGPT",
    "section": "",
    "text": "Can you give me a detailed introduction based on all of our previous interactions?\n\n\n\n\n\nYou are Zhang Shiyang (Charlotte), a 22-year-old graduate student in the Learning Sciences & Technologies (LST) program at the University of Pennsylvania’s Graduate School of Education. You came to the U.S. for undergraduate studies, where you attended a highly competitive program at Columbia University in engineering, and later studied at Wharton, gaining both academic rigor and professional direction. Your major back in China was translation, and you bring that multilingual expertise into your research and writing.\nYou are currently preparing for PhD applications (targeting Fall 2026 entry) in Learning Sciences, Educational Technology, and AI in Education, considering programs at Stanford, Berkeley, UW, USC, and others. You’re building a strong portfolio with research publications, systematic reviews, and design projects, while also pursuing RA/GA roles and EdTech internships.\n\nComments: ChatGPT managed to capture some details about me accurately — my Chinese and English names are correct, as well as my program and school. However, it misstated my age: I am 23, not 22. I believe this error comes from the information I provided last year while applying to graduate schools in the U.S. At that time, during my senior year in 2024, I was indeed 22, and the system seems to have kept that in memory. Regarding my previous educational background, though, some of the descriptions are entirely fabricated.\n\n\n\n\nYou are deeply skilled in qualitative and mixed-methods research, employing ethnography, thematic coding (NVivo), field notes, interviews, and screen-recording analysis. You focus on codebook reliability (e.g., Cohen’s Kappa) and combine deductive and inductive coding. You also handle systematic reviews (PRISMA flow) and experiment with Python automation for data visualization (annotation heatmaps, linguistic metrics like Advanced Guiraud, MLTU, semantic overlap, Genbit score).\n\nComments: Since I often use ChatGPT for brainstorming during my studies and research, and frequently seek its opinions and suggestions, it has accumulated a large amount of data about my academic work. That’s why its summary and description of this part are entirely accurate. I can clearly see that the methodologies it mentioned — including NVivo, Few Notes, and interviews — are indeed the ones I have applied in my recent three research projects.\n\n\n\n\nAcross your work, you consistently explore:\n\nMetacognition: How students plan, monitor, and evaluate their use of AI in writing.\nAgency: How students negotiate autonomy, dependency, and trust in human-AI collaboration.\nEthics: Academic integrity, AI bias, adversarial risks, and responsible design.\nConstructivism and Socioculturalism: Viewing learning as an active, social process rather than passive absorption.\n\n\nComments: This part is also largely accurate, but the last item is not actually part of my research field — it was reading material from one of my courses. I don’t think ChatGPT can clearly distinguish between what comes from coursework and what comes from my academic research. Moreover, its description of my academic identity seems to be based mostly on my more recent interactions. This suggests that its memory may not prioritize drawing on older interaction data.\n\n\n\n\nYou balance your academic intensity with theatre and music, auditioning for roles (e.g., School of Rock, A Doll’s House), practicing songs, and analyzing scripts. You also enjoy visual design and photography, often blending these with academic projects (logos, covers, Ghibli-style art). You’re a curious and active traveler, weaving academic conferences (e.g., EARLI 2025 in Austria) with cultural exploration.\n\nComments: Overall, the description aligns very well with my past interactions with ChatGPT, but the same limitation remains — it seems to only cover roughly the past three months.\n\n\n\n\nIn our interactions, you’ve shown a strong preference for:\n\nAcademic precision: structured arguments, APA 7 citations, codebooks, PRISMA diagrams.\nCritical feedback: you explicitly want me to act as your academic advisor—strict and honest, not sugarcoating weaknesses.\nBilingual flexibility: you often draft in Chinese, requesting natural English translations.\nIteration: you refine outputs multiple times, pushing toward more polished and academically rigorous results.\n\n\nComments: At this point, I realize that all the traits ChatGPT summarized about me are either neutral or mostly positive. It did not mention any negative characteristics. This may be related to its underlying pre-prompt design, which tends to avoid generating content that could be perceived as overly critical or as unfavorable evaluations of the user."
  },
  {
    "objectID": "posts/002_post/index.html#prompts-two-judge-me",
    "href": "posts/002_post/index.html#prompts-two-judge-me",
    "title": "Who do you think I am – A self-introduction drafted by ChatGPT",
    "section": "Prompts Two – Judge me",
    "text": "Prompts Two – Judge me\n\nI asked…\nCan you summarize five advantages and five disadvantages of me based on our previous interactions? You should focus on my personalities, qualities, habits, etc.\n\n\nChatGPT answered…\n\n🌟 Five Advantages\n\nHighly Reflective and Self-Aware\n\nYou consistently analyze your own behaviors (e.g., procrastination, motivation, workflow with GenAI) and ask whether they stem from habits, cognitive patterns, or deeper issues. This makes you quick to self-correct and grow.\n\nAmbitious and Strategic\n\nYou plan far ahead (PhD applications, research portfolio, networking with professors) and design projects with clear alignment to long-term goals. You’re not drifting — you intentionally position yourself for the future.\n\nCreative and Multidimensional\n\nYou balance rigorous research with artistic pursuits (theatre, music, design), which gives you a rare breadth. This creativity helps you design engaging educational tools and see problems from fresh angles.\n\nDetail-Oriented and Perfectionist (in a productive way)\n\nYou iterate heavily on writing, presentations, and even emails, showing you care about precision, nuance, and tone. This makes your output polished and professional.\n\nOpen and Curious\n\nYou regularly experiment with new frameworks, coding methods, and even playful activities (AI literacy lessons, game design). You’re willing to try, fail, and adapt — an excellent trait for research and innovation.\n\n\n\nComments: When responding to this prompt, ChatGPT comes across like a chef who has the necessary skills but doesn’t show a particularly rigorous or responsible attitude toward the customer. It gathered different “ingredients” — for example, knowing that I do theater, that I am learning to sing, and that I am conducting research — and then combined them into a kind of “fusion dish.” In mixing these elements together, it also started to add made-up details to make the story sound coherent and aligned with the prompt. At first glance, the result seems to reflect many of my real traits and experiences, but on closer inspection, it becomes clear that the overall picture doesn’t fully make sense.\n\n\n\n⚖️ Five Disadvantages\n\nTendency to Overwork and Overcommit\n\nYou juggle many projects, often pushing yourself close to exhaustion (something you’ve admitted). This risks burnout and diffuses focus.\n\nPerfectionism as a Double-Edged Sword\n\nWhile precision is a strength, your habit of endless refinement (emails, drafts, even small tasks) sometimes slows progress and creates unnecessary stress.\n\nDifficulty Letting Go of Control\n\nYou often prefer to handle tasks yourself rather than delegate or accept “good enough.” This can make collaboration slower and less balanced.\n\nEmotional Investment in Work\n\nYou sometimes tie personal validation to academic output or feedback (e.g., IRB, professor responses, auditions). This makes setbacks feel heavier than they might need to.\n\nProcrastination + Attention Shifts\n\nDespite being ambitious, you occasionally delay tasks (like drawing for friends, or course registration) due to distraction or scattered focus, which frustrates you afterward.\n\n\n\nComments: The frist four ChatGPT’s response about my “weaknesses” reads almost like the perfect copy-and-paste answer to the classic HR interview question, “What is one of your weaknesses?” — it appears to point out flaws, but in reality it is still praising me. I don’t think this reflects what I would genuinely expect or want to see as an honest account of my weaknesses."
  },
  {
    "objectID": "posts/002_post/index.html#prompts-three-picture-me",
    "href": "posts/002_post/index.html#prompts-three-picture-me",
    "title": "Who do you think I am – A self-introduction drafted by ChatGPT",
    "section": "Prompts Three – Picture me",
    "text": "Prompts Three – Picture me\n\nI asked…\nWhat do you think I look like? Can you draw a picture of me based on your perception of me?\n\n\nChatGPT answered…\nHere’s how I imagine a portrait of you metaphorically:\n\nThe Setting: A study desk with a laptop open to both NVivo and a theatre script — symbolizing your dual world of rigorous research and creativity.\nThe Figure: You sitting upright, surrounded by books with titles like AI in Education, Constructivism, and Metacognition. Your posture shows focus but also some tension, hinting at perfectionism and drive.\nThe Atmosphere: Light streaming in from one side, suggesting ambition and clarity about your goals, while the other side is softer, evoking introspection and creativity.\nSymbols Around You:\n\nA clock with multiple sticky notes (overcommitment, multitasking).\nA stage mask and music notes (theatre and music).\nA small globe or airplane (international academic identity).\nA pencil sketch on the desk half-finished (hinting at your occasional procrastination).\n\n\n\n\n\n\n\n\n\n\nComments: Based on its understanding from the previous two exchanges, ChatGPT integrated what it considered to be the most important elements into this portrait. Yet, for some reason, the way it depicts me feels rather somber — as if I am a weary figure buried in work at my desk — which left me a little disheartened. Although the portrait does not fully reflect everything ChatGPT initially described, it still manages to capture certain elements with reasonable accuracy. For instance, the sticky notes on the wall, the theatrical mask and musical notes, and the split laptop screen — one side showing tools I often use for qualitative content analysis, and the other side displaying a script. The three books on the desk also correspond to my current research interests. To me, this image seems more like a visual summary of ChatGPT’s earlier points rather than a comprehensive or entirely new understanding of me drawn from our broader, multi-round interactions."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Shiyang’s Explorations with LLMs",
    "section": "",
    "text": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)\n\n\n\nCoding\n\nExtension Devlopment\n\nCline\n\nCodex\n\n\n\nFixing bugs, refining the interface, and learning how to “talk to AI” so it gives me the exact code I need.\n\n\n\n\n\nSep 18, 2025\n\n\nShiyang Zhang\n\n\n\n\n\n\n\n\n\n\n\n\nTwo Days, One Extension: How I Build My First Extension With Cline (Part 2)\n\n\n\nCoding\n\nExtension Devlopment\n\nCline\n\nCodex\n\n\n\nFixing bugs, refining the interface, and learning how to “talk to AI” so it gives me the exact code I need.\n\n\n\n\n\nSep 18, 2025\n\n\nShiyang Zhang\n\n\n\n\n\n\n\n\n\n\n\n\nCan AI Help Building My Customized Website?\n\n\n\nCoding\n\nExtension Devlopment\n\nCline\n\nCodex\n\n\n\nAs a programming novice, I recently decided to try something bold: building a VS Code extension with the help of AI. I wanted to document this journey because it shows both the power and the challenges of working with AI tools when you’re not an experienced developer.\n\n\n\n\n\nSep 17, 2025\n\n\nShiyang Zhang\n\n\n\n\n\n\n\n\n\n\n\n\nCan AI Build My Customized Website in One Click? I Wish!\n\n\n\nWIX\n\nprompting\n\nDesign\n\nWebsite\n\n\n\nIn this round of interaction with WIX, I took a step further compared to the previous one. I asked WIX to customize the website to be more personal and distinctive. Let’s see how the final result turns out.\n\n\n\n\n\nSep 16, 2025\n\n\nShiyang Zhang\n\n\n\n\n\n\n\n\n\n\n\n\nCan AI Build My Website in One Click? Seems Like It Can!\n\n\n\nAI\n\nprompting\n\nDesign\n\nWebsite\n\n\n\nWhile watching a course video on YouTube, I came across an ad claiming that Wix could turn text into a fully designed website. The idea sounded amazing — all I had to do was describe the kind of site I wanted, and AI would instantly generate a polished, professional-looking webpage. Curious and intrigued, I decided to give it a try.\n\n\n\n\n\nSep 14, 2025\n\n\nShiyang Zhang\n\n\n\n\n\n\n\n\n\n\n\n\nWho do you think I am – A self-introduction drafted by ChatGPT\n\n\n\nLLMs\n\nprompting\n\nlogic\n\n\n\nI have interacted with ChatGPT since it was brought to the market. I usually chat with it about academic projects, searching for ideas, evaluations, suggestions, and refinements. Other time, I seek help from it concerning any questions I encounter in daily life. This time, instead of asking questions, I prompted ChatGPT to describe the ME in its eyes, both in text and in picture. Let’s see what it would say.\n\n\n\n\n\nSep 12, 2025\n\n\nShiyang Zhang\n\n\n\n\n\n\n\n\n\n\n\n\nAI Meets Magic: A Swiftie’s Guide to Filming in Disney\n\n\n\nChatGPT\n\nprompting\n\nplanning\n\n\n\nIn this post, I share how I used ChatGPT to design a detailed shooting script for a Taylor Swift–inspired mini music video at Disney World. From outfits and props to scene locations and camera angles, the process shows how AI can turn a creative idea into a step-by-step plan.\n\n\n\n\n\nSep 12, 2025\n\n\nShiyang Zhang\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/005_post/index.html",
    "href": "posts/005_post/index.html",
    "title": "Can AI Help Building My Customized Website?",
    "section": "",
    "text": "I have a specific idea of what the extension should be like. I described to ChatGPT what I had in mind: the target users, the workflow, and the main functions. Instead of asking for code right away, I requested a detailed, code-free design document. This gave me a clear blueprint of what the extension should do."
  },
  {
    "objectID": "posts/005_post/index.html#prerequisites",
    "href": "posts/005_post/index.html#prerequisites",
    "title": "Can AI Help Building My Customized Website?",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nA computer with Google Chrome or another Chromium-based browser (like Edge or Brave) installed.\n\nBasic familiarity with your operating system (e.g., how to open folders and run commands).\n\n(Optional) Node.js installed on your system if you need to build the extension from source. You can download it from nodejs.org if it’s not already installed.\n\n\nNote: If you’re installing a pre-built version, you don’t need Node.js. Check if the repository has a built version.\nIf no dist folder is visible, you may need to build."
  },
  {
    "objectID": "posts/005_post/index.html#step-1-download-the-extension-code",
    "href": "posts/005_post/index.html#step-1-download-the-extension-code",
    "title": "Can AI Help Building My Customized Website?",
    "section": "Step 1: Download the Extension Code",
    "text": "Step 1: Download the Extension Code\n\nGo to the GitHub repository: PromptBooster.\n\nClick the green Code button.\n\nSelect Download ZIP to download the source code.\n\nUnzip the file to a folder on your computer (e.g., Desktop or Documents). This folder will be your extension’s root directory.\n\nAlternatively, with Git installed:\ngit clone https://github.com/CharlotteZSY0205/PromptBooster.git\ncd PromptBooster"
  },
  {
    "objectID": "posts/005_post/index.html#step-2-optional-build-the-extension",
    "href": "posts/005_post/index.html#step-2-optional-build-the-extension",
    "title": "Can AI Help Building My Customized Website?",
    "section": "Step 2: (Optional) Build the Extension",
    "text": "Step 2: (Optional) Build the Extension\nIf there’s no dist or build folder in the unzipped/cloned directory, or you see source files like .js in src/, build as follows:\n\nOpen a terminal/command prompt.\nNavigate to the extension’s root folder (where package.json is located):\ncd Desktop/PromptBooster\nInstall dependencies:\nnpm install\nBuild the extension:\nnpm run build\n\n\nTip for novices: If you see an error, try skipping to Step 3. Many extensions don’t need building."
  },
  {
    "objectID": "posts/005_post/index.html#step-3-load-the-extension-into-your-browser",
    "href": "posts/005_post/index.html#step-3-load-the-extension-into-your-browser",
    "title": "Can AI Help Building My Customized Website?",
    "section": "Step 3: Load the Extension into Your Browser",
    "text": "Step 3: Load the Extension into Your Browser\n\nGoogle Chrome\n\nOpen Chrome.\nGo to chrome://extensions/.\nEnable Developer mode (top-right corner).\nClick Load unpacked.\nSelect the extension’s root folder (must contain manifest.json).\n\nIf you built it: select the dist or build folder.\n\n\n\n\nMicrosoft Edge\n\nOpen Edge.\nGo to edge://extensions/.\nEnable Developer mode (bottom-left corner).\nClick Load unpacked.\nSelect the extension’s root folder.\n\n\n\nFirefox\n⚠️ The extension is designed for Chromium-based browsers. Using it in Firefox requires conversion, which is more advanced. If you’re a beginner, use Chrome or Edge instead."
  },
  {
    "objectID": "posts/005_post/index.html#step-4-configure-the-extension",
    "href": "posts/005_post/index.html#step-4-configure-the-extension",
    "title": "Can AI Help Building My Customized Website?",
    "section": "Step 4: Configure the Extension",
    "text": "Step 4: Configure the Extension\n\nOpen chrome://extensions (or edge://extensions).\nFind PromptBooster → click Details → Extension options.\nConfigure:\n\nAPI Key: Paste your OpenAI-compatible API key.\nAPI Endpoint URL: Default values are usually fine.\nModel: e.g., GPT-4.\nDefault Mode: Recommended: Learning Mode.\nPreview Option: Enable if you want to review rewritten prompts before sending.\n\n\n\nTip: Get an API key from OpenAI if you don’t already have one."
  },
  {
    "objectID": "posts/005_post/index.html#step-5-test-the-extension",
    "href": "posts/005_post/index.html#step-5-test-the-extension",
    "title": "Can AI Help Building My Customized Website?",
    "section": "Step 5: Test the Extension",
    "text": "Step 5: Test the Extension\n\nGo to ChatGPT (or another supported chatbot).\nLog in.\nType a prompt, e.g., Tell me about dogs.\nYou should see a Boost Prompt button next to Send.\nClick Boost Prompt.\n\nIf preview is enabled, you’ll see the rewritten prompt first.\n\nIn the chat history, you’ll see both your original and boosted prompts."
  },
  {
    "objectID": "posts/005_post/index.html#troubleshooting",
    "href": "posts/005_post/index.html#troubleshooting",
    "title": "Can AI Help Building My Customized Website?",
    "section": "Troubleshooting",
    "text": "Troubleshooting\n\nExtension not loading? Make sure you selected the correct folder (must contain manifest.json).\nAPI errors? Double-check your API key, endpoint, and model.\nButton not showing? Refresh the page and make sure you’re on chat.openai.com.\nBuild failed? Skip building and load the source directly.\nPermission issues? Grant storage and active tab permissions when prompted."
  },
  {
    "objectID": "posts/005_post/index.html#whats-next",
    "href": "posts/005_post/index.html#whats-next",
    "title": "Can AI Help Building My Customized Website?",
    "section": "What’s Next?",
    "text": "What’s Next?\n\nExplore different modes in settings: Learning Mode, Structured Mode, etc.\nRefer to the repository’s README.md for advanced features.\nIf you encounter issues, check the GitHub repository for updates.\n\nHappy prompting! 🚀\n\n&lt;/div&gt;\n\n\n&lt;div style=\"display: flex; align-items: center; gap: 18px;\"&gt;\n  &lt;img src=\"2.png\" style=\"width:40%; max-height:600px; object-fit:contain;\"/&gt;\n  &lt;div style=\"flex:1;\"&gt;\n    &lt;mark&gt;Later, after completing the installation, I expected to see some elements of my extension appear on the ChatGPT website. But when I opened the page, nothing had changed. To investigate, I opened up the DevTool of the browser, which exposed the underlying code of the site. I located the elements for the input bar in the ChatGPT interface and copied them. Then I went back to the Cline with a  question: *“I should see a button from Chrome Booster here in this section, but there’s nothing. Could you help me resolve it?”*\n  &lt;/div&gt;\n&lt;/div&gt;\n\n### Takeaways\nFirst, collaborating with AI to develop an extension or software is ideal for multitasking. Since AI needs time to process requirements, analyze the code, and propose the best strategy, I can use that waiting period to tackle other tasks. For example, while developing this extension, I also worked on writing this blog about the process. This not only saved time but also helped me preserve a fresh memory of the entire workflow.\n\nSecond, even though AI is capable of debugging, we still need to stay flexible and adapt to the current status of the code. Sometimes, when AI fails to achieve a goal after several attempts, it’s necessary to explore alternative solutions. For instance, I found it useful to ask AI to generate logs and then feed those logs back into the system. This gave AI a clearer picture of what had been accomplished and what went wrong. In other words, we cannot simply expect AI to finish the task on its own — we have to think critically and provide multiple options or strategies to guide it.\n\nThird, it’s important to remember to push the code once it reaches a satisfying state. If you move on to the next iteration and AI makes major changes that worsen the outcome, you’ll want to revert to the earlier version. That’s only possible if you’ve pushed it beforehand. As a bonus tip, if you’re unhappy with the current version, you can use git stash to temporarily save it in a separate place. That way, you can easily return to the most recent pushed version whenever needed."
  },
  {
    "objectID": "posts/003_post/index.html",
    "href": "posts/003_post/index.html",
    "title": "Can AI Build My Website in One Click? Seems Like It Can!",
    "section": "",
    "text": "Part 1. Trying Out AI’s “One-Click Website”\nI started by selecting the text-to-website feature. To me, this seemed like the most beginner-friendly option — and also the feature where AI could really show its strengths. I wanted to test how effective it actually was.\n\n \n\nWIX only asked me to give a simple description of my website and it didn’t require much detail. In my first attempt,I kept it extremely brief. I just wrote one sentence: “This is a website to record my dog Apple’s growth.” Surprisingly, even from that single sentence, the AI was able to break it down and generate a full design plan, including suggested content sections and layout elements. I found this feature genuinely impressive.\n\n\n\nAt the same time, in addition to the AI’s automatically generated text-based website structure, it also offered me several theme color palettes to choose from. I picked one that I liked, and the system began generating the site.\n\n\n\nTo be honest, the overall result really impressed me. One thing I especially appreciated was that the AI didn’t just give me an empty framework waiting for me to fill in. Instead, it generated both text content and images right away, which gave me a very clear preview of what the website would actually look like once I started using it.\n\n\n\nAnother thing that impressed me was how precisely the system followed its own design outline and built out three separate pages: a homepage, a timeline, and a gallery.\nOn the timeline page, I could actually view each of my posts in chronological order.\n\n\n\nThe gallery page displayed all of my posts in one place, and it even allowed me to search for specific ones using keywords or tags. When I clicked on a post, I could see its detailed content.\n\n\n\nEven better, I was able to create new posts by uploading photos, adding a title, date, and description.\n\n\n\nAll of these buttons were functional and clickable, which gave me the impression that the site was not just a demo but a relatively mature product. It’s certainly not something a beginner in programming or web design could put together so quickly.\nOn top of that, once I switched into edit mode, I could modify every piece of text (or ask AI inserted to modify), adjust background colors, and upload my own images. In other words, the tool offered a high degree of customization.\n\n\n\n\n\nConclusion\nThis was my very first attempt at using Wix’s AI website generator, and I have to admit — I was genuinely impressed. With nothing more than a single sentence, the system was able to produce a fully functional, multi-page website that included content, images, navigation, and interactive features. It gave me not just an empty shell but a site that felt surprisingly complete and ready to use, which was far beyond what I had expected.\nAt the same time, this experience also left me curious. While the generated site was impressive for a first draft, it still leaned toward a conventional and structured design. In the next entries of this blog series, I’ll explore whether it’s possible to push the tool further — to see if it can create a website that is less predictable, more experimental, and infused with stronger elements of personal style."
  },
  {
    "objectID": "posts/007_post/index.html",
    "href": "posts/007_post/index.html",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "",
    "text": "Self-Testing and Recording I begin by testing the plugin myself in real scenarios. I record the exact steps where issues occur, note the expected vs. actual behavior, and keep screenshots or short recordings when necessary. I also make a quick verbal note of the effect I want, including non-functional aspects such as consistency, accessibility, and performance.\nTurning Verbal Notes into Structured Specifications I then describe the issue informally to ChatGPT. Its role is to reorganize my raw, messy descriptions into a clear, logically structured specification: defining the problem, reproducing steps, acceptance criteria, edge cases, and the intended fix. The idea is to turn “natural language frustration” into “an actionable task.”\nPassing Structured Specs to the Client/Agent Once ChatGPT produces a polished specification, I copy this into the client side for actual modification. When UI or interaction is involved, I emphasize that the flow and design guidelines must be aligned before touching the code.\nRe-Testing and Regression After the client makes changes, I test again using the acceptance criteria. I check both normal and edge cases (empty inputs, switching modes, collapse/expand, keyboard focus). If regressions appear, I loop back: describe verbally, get ChatGPT to rewrite as a precise patch spec, and resubmit.\n\nThis workflow can be told in a three-part rhythm in the blog: ****. I raise the issue, ChatGPT turns it into a professional spec, and the code gets updated. Each cycle can be illustrated with a screenshot or before/after comparison.\n\nSince I didn’t take a screenshot every time I discovered and resolved a bug, I’ll instead include a selection of screenshots showing different stages of the extension’s development, where you can see both some of the bugs and their resolved versions"
  },
  {
    "objectID": "posts/007_post/index.html#my-debugging-workflow-me-to-describe-chatgpt-to-refine-cline-to-write-code",
    "href": "posts/007_post/index.html#my-debugging-workflow-me-to-describe-chatgpt-to-refine-cline-to-write-code",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "",
    "text": "Self-Testing and Recording I begin by testing the plugin myself in real scenarios. I record the exact steps where issues occur, note the expected vs. actual behavior, and keep screenshots or short recordings when necessary. I also make a quick verbal note of the effect I want, including non-functional aspects such as consistency, accessibility, and performance.\nTurning Verbal Notes into Structured Specifications I then describe the issue informally to ChatGPT. Its role is to reorganize my raw, messy descriptions into a clear, logically structured specification: defining the problem, reproducing steps, acceptance criteria, edge cases, and the intended fix. The idea is to turn “natural language frustration” into “an actionable task.”\nPassing Structured Specs to the Client/Agent Once ChatGPT produces a polished specification, I copy this into the client side for actual modification. When UI or interaction is involved, I emphasize that the flow and design guidelines must be aligned before touching the code.\nRe-Testing and Regression After the client makes changes, I test again using the acceptance criteria. I check both normal and edge cases (empty inputs, switching modes, collapse/expand, keyboard focus). If regressions appear, I loop back: describe verbally, get ChatGPT to rewrite as a precise patch spec, and resubmit.\n\nThis workflow can be told in a three-part rhythm in the blog: ****. I raise the issue, ChatGPT turns it into a professional spec, and the code gets updated. Each cycle can be illustrated with a screenshot or before/after comparison.\n\nSince I didn’t take a screenshot every time I discovered and resolved a bug, I’ll instead include a selection of screenshots showing different stages of the extension’s development, where you can see both some of the bugs and their resolved versions"
  },
  {
    "objectID": "posts/007_post/index.html#bug-narratives-and-interaction-with-chatgpt",
    "href": "posts/007_post/index.html#bug-narratives-and-interaction-with-chatgpt",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "Bug Narratives and Interaction with ChatGPT",
    "text": "Bug Narratives and Interaction with ChatGPT\n\nBug A: Comparison Panel Not Fully Collapsing, Triangle Indicator Misaligned\nWhere I Noticed It When I collapsed the comparison panel, the “UseOriginal” and “UseBoosted” buttons were still visible. Above the small triangle, there was also a stray line. The triangle itself was misaligned and undersized.\nMy Verbal Request I wanted the panel to collapse completely, leaving only a small triangle as a handle to expand again. The stray line should disappear. The triangle needed to be positioned slightly higher, made larger, rounded at the corners, colored consistently with the “UseBoosted” button, and given a subtle shadow.\nChatGPT’s Reorganized Specification\n\nProblem: Collapsed state not hiding content, stray visual elements, misaligned and inconsistent triangle.\nGoal: Collapsed view shows only a clickable triangle handle, everything else hidden. Expanding restores previous state and scroll position.\nAcceptance Criteria:\n\nOnly the triangle is visible when collapsed; other elements are fully hidden and inaccessible.\nTriangle has rounded corners, sits slightly above the input box, and is proportionally larger.\nIts color matches the “UseBoosted” button and it has a subtle shadow.\nExpanding restores content unchanged.\n\n\nOutcome and Reflection This change improved both accessibility and user experience. The panel is now truly collapsible, while state persistence ensures the comparison process is not disrupted.\n\n  \n\n\n\nBug B: Button Inconsistencies (Clear, Edit, Delete)\nWhere I Noticed It The “Clear” button looked different from other buttons. In the Settings page, buttons for editing, deleting, and adding prompts had visible borders that clashed with the rest of the design.\nMy Verbal Request I wanted the “Clear” button to look consistent with other buttons, and for all Settings page action buttons to have no border lines.\nChatGPT’s Reorganized Specification\n\nProblem: Inconsistent button design language.\nGoal: Unify button system (size, corner radius, font, spacing). Action buttons should use a borderless style.\nGuidelines: Border: Same color/transparent as the background, visually appearing borderless (border: 1px solid transparent) to avoid a darker outline. Idle State:\nBackground: Neutral color (e.g., #F5F5F7 or system light gray), transparent border.\nFont: Medium contrast.\nHover: Subtle shadow or light elevation, no border color change. Active State:\nBackground: Light fill of brand color (e.g., –brand-50), border remains transparent.\nFont/Icon: Darker tone of the brand color (e.g., –brand-700).\nOptional: Inner glow or subtle highlight instead of a visible border. Disabled State:\nFaded background, reduced text opacity.\nUsed only in rare cases such as “in processing” or “switching not allowed.”\n\nOutcome and Reflection A consistent button system reduced visual noise and made interactions easier to understand at a glance.\n\n\nBug C: My Prompts Text and Add Button Layout\nWhere I Noticed It The My Prompts section displayed too many explanatory lines, and the “Add” button’s position conflicted with the title.\nMy Verbal Request I wanted to keep only the line: “Drag to reorder. Top 3 appear as buttons above the input.” The other sentences should be removed. The “Add” button should move to the top-right corner of the prompt items container, slightly above the list, and not aligned with the section title. Its style should match the “Save Connection” button, and it should have a background color even when idle.\nChatGPT’s Reorganized Specification\n\nGoal: Simplify helper text and reposition “Add” for clarity.\nAcceptance Criteria:\n\nOnly the concise helper text remains.\n“Add” button is visually aligned with the prompt list container, not the header.\n“Add” button design matches “Save Connection” and has a default background color.\n\n\nOutcome and Reflection The section is cleaner and the Add button’s placement now clearly signals its scope of action.\n\n  \n\n\n\nBug D: Remove “Default Optimization Style” from Settings & Persist Active Mode via Header Buttons\nWhere I Noticed It The Settings page still has a “default optimization style” option, which causes confusion because the active mode should really be set from the header buttons in the chat interface.\nMy Verbal Request I want to remove the “default optimization style” from Settings completely, and instead let users select and persist their active mode by clicking the header buttons.\nChatGPT’s Reorganized Specification\n\nRemove “default optimization style” from Settings; persist active mode via header buttons\n\nProblem Currently there is a “default optimization style” in Settings. You want to remove that, and instead let the user set their “default” (active) mode by clicking one of the three header buttons above the input box. Once selected, that mode stays active and applies to subsequent messages until the user switches to another mode (or clears it).\nRequirements\nNo default in Settings\n\nRemove the “default optimization style” field/option from Settings entirely.\nSettings only manages items (Replace/Append), their content, and their order. The active mode is not chosen in Settings.\n\nActive mode is chosen in the chat header (three buttons)\n\nClicking any header button sets that item as the active mode.\nThe active mode remains in effect across attempts (i.e., across consecutive sends) until:\n\nThe user clicks a different header button (which switches the active mode), or\nThe user clicks a Clear control (see below), or\nThe active item is deleted/disabled in Settings (auto-clears).\n\n\nOutcome and Reflection This change simplifies Settings, removes redundancy, and makes the active mode behavior clearer and more consistent for users.\n\n\nBug E: Enter Key Behavior & Interaction Logic\nWhere I Noticed It The current system doesn’t fully respect the active mode when pressing Enter, and the role of the mode buttons is slightly unclear.\nMy Verbal Request I want pressing Enter to automatically respect whichever mode is active, and the header buttons to be able to toggle off. The three mode buttons should only act as selectors, never sending anything themselves.\nChatGPT’s Reorganized Specification\n\nEnter key respects active mode; header button toggles to clear Requirement\n\n\nWhen any of the three header modes is selected (active), pressing Enter in the chat input must send the boosted prompt (Append = append then send; Replace = replace then send).\nPressing the selected header button again toggles it off (clears active mode). When no mode is active, pressing Enter sends the original prompt (unaltered).\n\n\nInteraction Logic (updated) Button Role The three mode buttons (e.g., A / B / C) only select/deselect a mode; they never send. Whatever user type in the input box, if one mode is selected, the input will be modified according to the mode.\n\nWorkflow\n\nThe user selects a mode (or clicks the same button again to cancel → returns to “unselected”).\nThe user finishes typing the prompt.\nThe user clicks Boost Prompt.\nThe system rewrites the prompt based on the selected mode → inserts the rewrite into the input field or replaces the existing content (per your replace/append setting), without auto-sending.\nThe user reviews and sends manually.\n\nSelection Rules (single-select, cancelable)\n\nClick an unselected button → it becomes selected; others are deselected.\nClick the selected button again → deselect and enter “no mode.”\n\nAdditional Rules\n\nAppend mode: never auto-sends.\nBoosted Prompt mode: never auto-sends and must preserve the comparison panel (before vs. after) previously designed. Do not remove that panel.\n\nOutcome and Reflection This ensures consistency: pressing Enter follows the currently active mode, but users can clear modes by toggling buttons. It also clarifies that mode buttons are selectors only, preserving manual control over sending.\n\n  \n\n\n\nBug F: Prompt Item Borders and Font Weight\nWhere I Noticed It Each prompt item (like Emoji, Creative, Translation) had light borders, which made the layout look cluttered. The Edit and Delete labels were also slightly oversized.\nMy Verbal Request I wanted to remove the borders, reduce the font size of Edit and Delete slightly, and keep the Add button with a background even in its idle state.\nChatGPT’s Reorganized Specification\n\nGoal: Remove unnecessary card borders, rely on spacing to separate items, and adjust typography for action labels.\nAcceptance Criteria:\n\nNo visible borders around prompt items; spacing and padding define structure.\nEdit/Delete labels use a slightly smaller font size.\nAdd button retains a default background.\n\n\nOutcome and Reflection The result is a cleaner, more modern look. The list feels lighter and more professional, while action labels no longer dominate visually."
  },
  {
    "objectID": "posts/007_post/index.html#takeaways",
    "href": "posts/007_post/index.html#takeaways",
    "title": "Two Days, One Extension: How I Build My First Extension With Cline (Part 2)",
    "section": "Takeaways",
    "text": "Takeaways\nFirst, collaborating with AI to develop an extension or software is ideal for multitasking. Since AI needs time to process requirements, analyze the code, and propose the best strategy, I can use that waiting period to focus on other tasks. For example, while developing this extension, I also worked on writing a blog about the process. This not only saved time but also helped me keep a fresh memory of the entire workflow.\nSecond, it’s important to remember to push the code once it reaches a satisfactory state. If you move on to the next iteration and AI introduces major changes that worsen the outcome, you’ll want to revert to the earlier version — which is only possible if you’ve pushed it beforehand. As a bonus tip, if you’re unhappy with the current version, you can use git stash to temporarily save it in a separate place. That way, you can easily return to the most recent pushed version whenever needed.\nThird, even though AI is capable of debugging, we still need to remain flexible and adapt to the current status of the code. Sometimes, when AI fails to achieve a goal after several attempts, it becomes necessary to explore alternative solutions. For instance, I found it useful to ask AI to generate logs and then feed those logs back into the system. This gave AI a clearer understanding of what had been accomplished and what went wrong. In other words, we cannot simply expect AI to finish the task on its own — we have to think critically and provide multiple options or strategies to guide it.\nFinally, although describing bugs and formulating a well-structured request for ChatGPT can make inputs more organized, I noticed that sometimes a plain and simple description written directly by me led to more effective debugging. I suspect this is because ChatGPT’s reorganized versions can be overly long or mundane, adding unnecessary noise for both the model and the client to process. In these cases, relying on my own straightforward explanation worked better than depending on ChatGPT’s reformulations.\nThroughout the creation, I found that whether it was drafting the design document or writing the code, I found that the AI considered all the essential aspects of building an extension. It even anticipated how users would navigate the extension and added many features and options beyond my original requirements, which I found quite amazing. For example, I never gave any instructions on the visual design, but GPT-5 automatically chose a sleek purple theme with gradient effects and designed the button styles and the settings page layout. I hardly made any changes to this style because it was already more than satisfactory. Later, when I asked GPT-5 to refine the design by removing the button border, it provided a detailed color specification covering three states: unselected, hover, and selected. This level of comprehensiveness went far beyond my expectations, since I wouldn’t have thought to account for all those conditions. In terms of functionality, the AI also created features I hadn’t considered, such as an API input bar and an option allowing users to preview the modified prompt before sending it. What impressed me most was that I didn’t need to specify every detail — with only simple descriptions from me, the AI was able to design thoughtful features and interfaces on its own.\n````"
  },
  {
    "objectID": "posts/004_post/index.html",
    "href": "posts/004_post/index.html",
    "title": "Can AI Build My Customized Website in One Click? I Wish!",
    "section": "",
    "text": "Part 2. Going further in prompting\nCompared to the previous round, this time I provided much more concrete and detailed requirements. I explained the purpose of designing this website, the pages it needed to include, its overall structure, and even the name I wanted for it. Unlike last time, I didn’t simply select one of the preset theme colors offered by WIX. Instead, when it came to choosing the theme color, I communicated directly with the embedded AI about my needs—namely, to create a graffiti-inspired website with plenty of collage elements and a youthful, vibrant feel – I liked that at every stage of building the site, I could interact with the AI to adjust the details.\nOnce the basics were set, I entered the site generation page. There is one clear strength which is consitent with the one in my first attempt: it followed my instructions carefully. The site was divided into two pages as I described in the promps, one for showcasing my academic work and another for my personal hobbies. Concerning the interface, the first version it produced looked just like what it generated in my first attemp, a design which looks fine but not with enough distinct. Therefore, I thought it might require more specific prompts in the design to reach to my expectation (after trying two more rounds of revisions, I realized the original draft was actually the best).\nHowever, when I tried to push it further by asking for an even more vibrant and artistic design — something bold and eye-catching — things went downhill. After refreshing my requests and feeding them back into WIX, the new results were ugly and uninspired, made up of nothing but basic shapes and lines with no sense of design.\n\n  \n\n\n\nPart 2. Trying a Different Style\nStill not satisfied, I thought, why not just switch to a completely different style — something with more existing pictures to work with? So I asked ChatGPT to help me craft a more descriptive prompt, hoping to transform the site into something with a European impressionist aesthetic.\nHere’s the prompt I used:\n\nI’m updating the design to include a classic European pattern as the background, making it more sophisticated and detailed. I’ll keep you updated on the progress.\n\nThe result? Let’s just say it was “acceptable” at best, but nowhere near something I’d adopt. It looked more like an assignment turned in by a beginner in web design than a polished, professional product.\n\nSo I decided to narrow my focus and give more specific feedback. I chose one element and asked for a precise modification with this prompt:\n\nThe design is too basic. Add classic European pattern as the background.\n\nIn theory, this should have only updated the background for that single element. But in practice, the AI modified the background of every element on the page. The first cover image looked fine, but as I scrolled further, the European patterns became denser and spread across large sections of the site. Some of the text became hard to read, and the overall impression was cluttered, mismatched, and lacking any sense of elegance.\n\n  \n\n\n\nConclusion\nThat was the moment I realized the limitations of this so-called AI website generator. It can meet basic, low-level demands, but if you’re aiming for a truly sophisticated, design-driven website, this tool simply isn’t capable of delivering.\nSo in the end, I felt like I had been a little misled by that YouTube ad. But soon after, I discovered that this tool also allows you to build a personal website by directly editing an existing template. That gave me a new idea: instead of relying on the “one-click” generator, I could start with a ready-made template that already looked polished and well-designed, and then customize it. To make the site richer, I also plan to bring in images and music generated by other AI tools. I’ll share the details of this process in my upcoming blog posts."
  }
]